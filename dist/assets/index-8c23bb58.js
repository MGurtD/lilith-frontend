import{B as i}from"./base.service-558553c0.js";import{t as r}from"./index-61ceac46.js";import{S as c}from"./suppliers.service-dfe346f2.js";class u extends i{}class d extends i{async getConsolidated(e,t,s,n){let a=`${this.resource}/Consolidated?startTime=${e}&endTime=${t}&type=${s}&typeDetail=${n}`;const p=await this.apiClient.get(a);if(p.status===200)return p.data}async getByExpenseType(e){const t=`${this.resource}/ExpenseType/${e}`,s=await this.apiClient.get(t);if(s.status===200)return s.data}}class l extends i{}class $ extends i{async GetBetweenDates(e,t){const s=`${this.resource}?startTime=${e}&endTime=${t}`,n=await r.get(s);if(n.status===200)return n.data}async GetBetweenDatesAndStatus(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&statusId=${s}`,a=await r.get(n);if(a.status===200)return a.data}async GetBetweenDatesAndExcludeStatus(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&excludeStatusId=${s}`,a=await r.get(n);if(a.status===200)return a.data}async GetBetweenDatesAndSupplier(e,t,s){const n=`${this.resource}?startTime=${e}&endTime=${t}&supplierId=${s}`,a=await r.get(n);if(a.status===200)return a.data}async GetDueDates(e){const t=await r.post(`${this.resource}/DueDates`,e);if(t.status===200)return t.data}async RecreateDueDates(e){return(await r.post(`${this.resource}/RecreateDueDates`,e)).status===200}async UpdateStatuses(e){const t=`${this.resource}/UpdateStatuses`;return(await r.post(t,e)).status===200}async CreateImport(e){const t=`${this.resource}/Import`;return(await r.post(t,e)).status===200}async UpdateImport(e){const t=`${this.resource}/Import/${e.id}`;return(await r.put(t,e)).status===200}async DeleteImport(e){const t=`${this.resource}/Import/${e.id}`;return(await r.delete(t)).status===200}}class h extends i{async getFiltered(e,t,s){let n=`${this.resource}?startTime=${e}&endTime=${t}`;s&&(n+=`&supplierId=${s}`);const a=await this.apiClient.get(n);if(a.status===200)return a.data}async addDetail(e){return(await this.apiClient.post(`${this.resource}/Detail`,e)).data}async updateDetail(e){return(await this.apiClient.put(`${this.resource}/Detail/${e.id}`,e)).data}async removeDetail(e){return(await this.apiClient.delete(`${this.resource}/Detail/${e}`)).data}async calculateDetailWeightAndPrice(e){return(await this.apiClient.post(`${this.resource}/Detail/Calculate`,e)).data}}const S={PurchaseInvoice:new $("/PurchaseInvoice"),PurchaseInvoiceSerie:new l("/PurchaseInvoiceSerie"),Supplier:new c("/Supplier"),SupplierType:new c("/SupplierType"),Expense:new d("Expense"),ExpenseType:new u("ExpenseType"),Receipt:new h("/Receipt")};export{S as E};
