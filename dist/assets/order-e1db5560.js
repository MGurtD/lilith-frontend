import{N as i,I as d}from"./index-680c2dac.js";import{E as r}from"./index-1969dab7.js";const n=i({id:"purchaseOrders",state:()=>({orders:void 0,order:void 0,ordersToReceipt:void 0,receptions:void 0}),getters:{},actions:{setNew(e){this.order={id:e,disabled:!1,date:"",exerciseId:"",statusId:"",supplierId:"",number:"",purchaseInvoiceId:null,details:[]}},async fetchFiltered(e,t,s,a){this.orders=await r.Order.getBetweenDates(e,t,s,a)},async fetchAll(){this.orders=await r.Order.getAll()},async fetchOne(e){this.order=await r.Order.getById(e),this.order&&(this.order.date=d(this.order.date))},async fetchOrdersToReceiptBySupplier(e){this.ordersToReceipt=await r.Order.getOrdersToReciptBySupplierId(e)},async create(e){const t=await r.Order.create(e);return t&&await this.fetchAll(),t},async createFromWo(e){return await r.Order.createFromWo(e)},async update(e,t){const s=await r.Order.update(e,t);return s&&await this.fetchAll(),s},async delete(e){const t=await r.Order.delete(e);return t&&await this.fetchAll(),t},async createDetail(e){const t=await r.Order.addDetail(e);return t.result&&await this.fetchOne(e.purchaseOrderId),t},async updateDetail(e,t){const s=await r.Order.updateDetail(t);return s.result&&await this.fetchOne(t.purchaseOrderId),s},async deleteDetail(e,t){const s=await r.Order.removeDetail(e);return s.result&&await this.fetchOne(t.purchaseOrderId),s},async getReceptions(e){this.receptions=await r.Order.getReceptions(e)}}});export{n as u};
