import{N as a}from"./index-37657aa9.js";import{E as n}from"./index-10708cfa.js";const r=a({id:"expense",state:()=>({expenseType:void 0,expenseTypes:void 0,expense:void 0,expenses:void 0}),getters:{},actions:{setNewExpenseType(e){this.expenseType={id:e,name:"",description:"",disabled:!1}},async fetchExpenseTypes(){this.expenseTypes=await n.ExpenseType.getAll()},async fetchExpenseType(e){this.expenseType=await n.ExpenseType.getById(e)},async createExpenseType(e){const s=await n.ExpenseType.create(e);return s&&await this.fetchExpenseTypes(),s},async updateExpenseType(e,s){const t=await n.ExpenseType.update(e,s);return t&&await this.fetchExpenseTypes(),t},async deleteExpenseType(e){const s=await n.ExpenseType.delete(e);return s&&await this.fetchExpenseTypes(),s},setNewExpense(e){this.expense={id:e,description:"",creationDate:new Date,paymentDate:new Date,endDate:new Date,amount:0,recurring:!1,frecuency:0,paymentDay:0,relatedExpenseId:"",expenseTypeId:"",disabled:!1}},async fetchExpenses(e,s,t){this.expenses=await n.Expense.getBetweenDatesAndType(e,s,t)},async fetchExpense(e){this.expense=await n.Expense.getById(e)},async getFiltered(e){this.expenses=await n.Expense.getByExpenseType(e)},async createExpense(e){var t;const s=await n.Expense.create(e);return s&&((t=this.expenses)==null||t.push(e)),s},async updateExpense(e,s){return await n.Expense.update(e,s)},async deleteExpense(e){var t;const s=await n.Expense.delete(e);return s&&(this.expenses=(t=this.expenses)==null?void 0:t.filter(p=>p.id!==e)),s}}});export{r as u};
