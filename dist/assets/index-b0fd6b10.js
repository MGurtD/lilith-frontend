import{B as s}from"./base.service-330045d1.js";class l extends s{async copyWorkMaster(r){return(await this.apiClient.post(`${this.resource}/copy`,r)).status===200}async calculateCost(r){return(await this.apiClient.get(`${this.resource}/cost/${r}`)).data}}class h extends s{async getByWorkMasterId(r){const e=await this.apiClient.get(`${this.resource}?workMasterId=${r}`);if(e.status===200)return e.data}}class p extends s{async getByWorkMasterPhaseId(r){const e=await this.apiClient.get(`${this.resource}?workMasterPhaseId=${r}`);if(e.status===200)return e.data}}class k extends s{async getByWorkMasterPhaseId(r){const e=await this.apiClient.get(`${this.resource}?workMasterPhaseId=${r}`);if(e.status===200)return e.data}}class u extends s{async GetBetweenDatesAndStatus(r,e,a){let n=`${this.resource}?startTime=${r}&endTime=${e}`;a&&(n+=`&statusId=${a}`);const i=await this.apiClient.get(n);if(i.status===200)return i.data}async GetBySalesOrderId(r){let e=`${this.resource}/SalesOrder/${r}`;const a=await this.apiClient.get(e);if(a.status===200)return a.data}async Create(r){return(await this.apiClient.post(`${this.resource}/CreateFromWorkMaster`,r)).data}async CreateFromSalesOrderDetail(r,e){return(await this.apiClient.post(`${this.resource}/CreateFromSalesOrderDetail/${e}`,r)).data}}class W extends s{async getByWorkOrderId(r){const e=await this.apiClient.get(`${this.resource}?workOrderId=${r}`);if(e.status===200)return e.data}}class w extends s{async getByWorkOrderPhaseId(r){const e=await this.apiClient.get(`${this.resource}?workOrderPhaseId=${r}`);if(e.status===200)return e.data}}class O extends s{async getByWorkOrderPhaseId(r){const e=await this.apiClient.get(`${this.resource}?workOrderPhaseId=${r}`);if(e.status===200)return e.data}}class y extends s{async getByWorkcenterId(r){const e=await this.apiClient.get(`${this.resource}/ByWorkcenter/${r}`);if(e.status===200)return e.data}async getByWorkOrderId(r){const e=await this.apiClient.get(`${this.resource}/ByWorkOrder/${r}`);if(e.status===200)return e.data}}class $ extends s{async GetBetweenDates(r,e,a,n){let i=`${this.resource}?startTime=${r}&endTime=${e}`;a&&(i+=`&workcenterId=${a}`),n&&(i+=`&operatorId=${n}`);const c=await this.apiClient.get(i);if(c.status===200)return c.data}async GetByWorkOrderId(r){const e=await this.apiClient.get(`${this.resource}/WorkOrder/${r}`);if(e.status===200)return e.data}}class o extends s{}class B extends s{}class g extends s{}class v extends s{}class d extends s{}class S extends s{}class P extends s{}class M extends s{}class C extends s{}const x={Enterprise:new o("/Enterprise"),Areas:new o("/Area"),Site:new o("/Site"),WorkcenterType:new d("/WorkcenterType"),Workcenter:new d("/Workcenter"),WorkcenterCost:new S("/WorkcenterCost"),MachineStatus:new P("/MachineStatus"),OperatorType:new C("/OperatorType"),Operator:new M("/Operator"),WorkMaster:new l("/WorkMaster"),WorkMasterPhase:new h("/WorkMaster/Phase"),WorkMasterPhaseDetail:new p("/WorkMaster/Phase/Detail"),WorkMasterPhaseBillOfMaterials:new k("/WorkMaster/Phase/BillOfMaterials"),WorkOrder:new u("/WorkOrder"),WorkOrderPhase:new W("/WorkOrder/Phase"),WorkOrderPhaseDetail:new w("/WorkOrder/Phase/Detail"),WorkOrderPhaseBillOfMaterials:new O("/WorkOrder/Phase/BillOfMaterials"),ProductionPart:new $("/ProductionPart"),DetailedWorkOrder:new y("/WorkOrder/Detailed")};export{o as A,B as E,P as M,M as O,g as S,v as W,d as a,S as b,C as c,x as d};
