import{J as i}from"./index-53820b8d.js";import{d as a}from"./index-a03cc526.js";const h=i({id:"workorder",state:()=>({workorder:void 0,workorders:void 0,workorderPhase:void 0}),getters:{},actions:{getWorkOrderCodeById(r){var t;const e=(t=this.workorders)==null?void 0:t.find(s=>s.id===r);if(e)return e.code},setNew(r){this.workorder={id:r,code:"",workMasterId:"",referenceId:"",exerciceId:"",order:0,plannedQuantity:0,plannedDate:"",statusId:"",startTime:null,endTime:null,comment:"",disabled:!1,phases:[]}},async fetchFiltered(r,e,t){this.workorders=await a.WorkOrder.GetBetweenDatesAndStatus(r,e,t)},async fetchAll(){this.workorders=await a.WorkOrder.getAll()},async fetchOne(r){this.workorder=await a.WorkOrder.getById(r)},async fetchBySalesOrder(r){this.workorders=await a.WorkOrder.GetBySalesOrderId(r)},async create(r){const e=await a.WorkOrder.Create(r);return e&&await this.fetchOne(e.content.id),e},async createAndUpdateSalesOrderDetail(r,e){const t=await a.WorkOrder.CreateFromSalesOrderDetail(r,e);return t&&await this.fetchOne(t.content.id),t},async update(r,e){const t=await a.WorkOrder.update(r,e);return t&&await this.fetchAll(),t},async delete(r){const e=await a.WorkOrder.delete(r);return e&&await this.fetchAll(),e},async fetchPhaseById(r){this.workorderPhase=await a.WorkOrderPhase.getById(r)},async createPhase(r){const e=await a.WorkOrderPhase.create(r);return e&&await this.fetchPhaseById(r.id),e},async updatePhase(r,e){const t=await a.WorkOrderPhase.update(r,e);return t&&await this.fetchPhaseById(e.id),t},async deletePhase(r){const e=await a.WorkOrderPhase.delete(r);return e&&await this.fetchOne(this.workorder.id),e},async createPhaseDetail(r){const e=await a.WorkOrderPhaseDetail.create(r);return e&&await this.fetchPhaseById(r.workOrderPhaseId),e},async updatePhaseDetail(r,e){const t=await a.WorkOrderPhaseDetail.update(r,e);return t&&await this.fetchPhaseById(e.workOrderPhaseId),t},async deletePhaseDetail(r){const e=await a.WorkOrderPhaseDetail.delete(r);return e&&await this.fetchPhaseById(this.workorderPhase.id),e},async createPhaseBomItem(r){const e=await a.WorkOrderPhaseBillOfMaterials.create(r);return e&&await this.fetchPhaseById(r.workOrderPhaseId),e},async updatePhaseBomItem(r,e){const t=await a.WorkOrderPhaseBillOfMaterials.update(r,e);return t&&await this.fetchPhaseById(e.workOrderPhaseId),t},async deletePhaseBomItem(r){const e=await a.WorkOrderPhaseBillOfMaterials.delete(r);return e&&await this.fetchPhaseById(this.workorderPhase.id),e}}});export{h as u};
