import{I as r}from"./index-e365f3be.js";import{P as a}from"./index-d8fe7816.js";const o=r({id:"workmaster",state:()=>({workmaster:void 0,workmasters:void 0,workmasterPhase:void 0,workmasterToCopy:void 0}),getters:{getByReferenceId:t=>e=>!e||!t.workmasters?[]:t.workmasters.filter(s=>s.referenceId===e)},actions:{setNew(t,e){this.workmaster={id:t,baseQuantity:1,referenceId:"",disabled:!1,externalCost:0,machineCost:0,materialCost:0,operatorCost:0,phases:[]},e&&(this.workmaster.referenceId=e)},async fetchAll(){this.workmasters=await a.WorkMaster.getAll()},async fetchAllActives(){var t;this.workmasters=await a.WorkMaster.getAll(),this.workmasters=(t=this.workmasters)==null?void 0:t.filter(e=>!e.disabled)},async fetchOne(t){this.workmaster=await a.WorkMaster.getById(t)},async fetchByReferenceId(t){this.workmasters=await a.WorkMaster.getByReferenceId(t)},async create(t){const e=await a.WorkMaster.create(t);return e&&await this.fetchOne(t.id),e},async update(t,e){const s=await a.WorkMaster.update(t,e);return s&&await this.fetchAll(),s},async delete(t){const e=await a.WorkMaster.delete(t);return e&&await this.fetchAll(),e},async calculate(t,e){return await a.WorkMaster.calculateCost(t,e)},async copy(t){const e=await a.WorkMaster.copyWorkMaster(t);return e&&await this.fetchAll(),e},async fetchPhaseById(t){this.workmasterPhase=await a.WorkMasterPhase.getById(t)},async createPhase(t){const e=await a.WorkMasterPhase.create(t);return e&&await this.fetchPhaseById(t.id),e},async updatePhase(t,e){const s=await a.WorkMasterPhase.update(t,e);return s&&await this.fetchPhaseById(e.id),s},async deletePhase(t){const e=await a.WorkMasterPhase.delete(t);return e&&await this.fetchOne(this.workmaster.id),e},async createPhaseDetail(t){const e=await a.WorkMasterPhaseDetail.create(t);return e&&await this.fetchPhaseById(t.workMasterPhaseId),e},async updatePhaseDetail(t,e){const s=await a.WorkMasterPhaseDetail.update(t,e);return s&&await this.fetchPhaseById(e.workMasterPhaseId),s},async deletePhaseDetail(t){const e=await a.WorkMasterPhaseDetail.delete(t);return e&&await this.fetchPhaseById(this.workmasterPhase.id),e},async createPhaseBomItem(t){const e=await a.WorkMasterPhaseBillOfMaterials.create(t);return e&&await this.fetchPhaseById(t.workMasterPhaseId),e},async updatePhaseBomItem(t,e){const s=await a.WorkMasterPhaseBillOfMaterials.update(t,e);return s&&await this.fetchPhaseById(e.workMasterPhaseId),s},async deletePhaseBomItem(t){const e=await a.WorkMasterPhaseBillOfMaterials.delete(t);return e&&await this.fetchPhaseById(this.workmasterPhase.id),e}}});export{o as u};
