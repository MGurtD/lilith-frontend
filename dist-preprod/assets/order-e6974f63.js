import{N as a}from"./index-948abaa8.js";import{E as r}from"./index-76940908.js";const n=a({id:"purchaseOrders",state:()=>({orders:void 0,order:void 0,ordersToReceipt:void 0,receptions:void 0}),getters:{},actions:{setNew(e){this.order={id:e,disabled:!1,date:"",exerciseId:"",statusId:"",supplierId:"",number:"",purchaseInvoiceId:null,details:[]}},async fetchFiltered(e,t,s,i){this.orders=await r.Order.getBetweenDates(e,t,s,i)},async fetchAll(){this.orders=await r.Order.getAll()},async fetchOne(e){this.order=await r.Order.getById(e)},async fetchOrdersToReceiptBySupplier(e){this.ordersToReceipt=await r.Order.getOrdersToReciptBySupplierId(e)},async create(e){const t=await r.Order.create(e);return t&&await this.fetchAll(),t},async update(e,t){const s=await r.Order.update(e,t);return s&&await this.fetchAll(),s},async delete(e){const t=await r.Order.delete(e);return t&&await this.fetchAll(),t},async createDetail(e){const t=await r.Order.addDetail(e);return t.result&&await this.fetchOne(e.purchaseOrderId),t},async updateDetail(e,t){const s=await r.Order.updateDetail(t);return s.result&&await this.fetchOne(t.purchaseOrderId),s},async deleteDetail(e){const t=await r.Order.removeDetail(e);if(t.result){const s=this.order.details.find(i=>i.id===e);if(s){const i=this.order.details.indexOf(s);this.order.details.splice(i)}}return t},async getReceptions(e){this.receptions=await r.Order.getReceptions(e)}}});export{n as u};
